# -*- coding: utf-8 -*-
"""Tarea1_cptorres_DRA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19S2kraVzeFOoynEN3rPW6Hh0_e8xJrOt

# Importing library
"""

import scipy as sp
import matplotlib.pyplot as plt
import numpy as np
from sklearn.metrics import r2_score

"""# Experimental Data"""

time = [0,47.83,56,64.17,87.5,112,148.17,170.33,189,210,226.33,247.33,311.5,371,429.33,442.17,478.33] #min
CC = [0,1.38,1.61,1.9,2.61,3.21,3.86,4.39,4.45,4.8,5.03,5.19,5.67,6.01,6.21,6.24,6.32]
CA0 = 6.4 #mol/liter
CBO= 6.4 #mol/liter

"""# Assuming first order"""

XA = []
CA = []
lnCACA0 = []
for i in CC:
  XA.append((i/(2*CA0)))

for j in XA:
  CA.append(CA0*(1-j))

for k in CA:
  lnCACA0.append(-np.log(k/CA0))

#R2 
corr1_matriz = np.corrcoef(time,lnCACA0)
corr1 = corr1_matriz[0,1]
R_sq1 = corr1**2
print (R_sq1)

z1 = np.polyfit(time, lnCACA0, 1)
y_1 = np.poly1d(z1)(time)

fig, ax = plt.subplots()
plt.plot(time,lnCACA0, marker="o", color="red", label = 'Linea de tendecia')
ax.set_xlabel("Time [min]")
ax.set_ylabel("-ln (CA/CA0)")
plt.plot(time, y_1, "m--", lw=1 , label = 'Linea de tendecia')
fig.legend()

"""# Assuming Second Order"""

secondOrder = []

for i in CA:
  secondOrder.append((1/i) - (1/CA0))

corr2_matriz = np.corrcoef(time,secondOrder)
corr2 = corr2_matriz[0,1]
R_sq2 = corr2**2
print(R_sq2)

z2 = np.polyfit(time, secondOrder, 1)
y_2 = np.poly1d(z2)(time)

fig, ax = plt.subplots()
plt.plot(time, secondOrder, marker="o", color="blue", label = 'Linea de tendecia')
ax.set_xlabel("Time [min]")
ax.set_ylabel(" 1/CA - 1/CA0")
plt.plot(time, y_2, "m--", lw=1, label = 'Linea de tendecia') 
fig.legend()

"""#Assuming Third Order"""

thirdOrder = []

for j in CA:
  thirdOrder.append(1/(2*(j**2)) - 1/(2*(CA0**2)))

corr3_matriz = np.corrcoef(time,thirdOrder)
corr3 = corr3_matriz[0,1]
R_sq3 = corr3**2
print (R_sq3)

z = np.polyfit(time, thirdOrder, 1)
y_3 = np.poly1d(z)(time)
fig, ax = plt.subplots()
ax.set_xlabel("Time [min]")
ax.set_ylabel("1/CA^2 - 1/CA0^2")
plt.plot(time, thirdOrder, marker="o", color="green", label = 'Linea de tendecia')
plt.plot(time, y_3, "m--", lw=1 , label = 'Linea de tendecia')
fig.legend()
print("la reacci√≥n es de tercer orden")